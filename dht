#!/bin/bash
# -*- sh -*-

: << =cut

=head1 NAME
Munin Plugin for Adafruit_Python_DHT.

=head1 APPLICABLE SYSTEMS

Raspberry Pi with DHT11/22, AM2302 connected.

=head1 CONFIGURATION

 [dht]
  user root
  env.script             - Location of Adafruit_Python_DHT example script.
                           It default filename is "AdafruitDHT.py"
  env.templog            - Last temperature Log.
  env.sensor             - Kind of sensor. 11 or 22 or 2302
  env.gpio               - GPIO Number connected.
  env.tempcorrection     - Temperature Correction Value.
  env.humiditycorrection - Humidity Correction Value.
  env.retry              - Number of retries at error.

=head2 DEFAULT CONFIGURATION

 Default configurations are...

 [dht]
  user root
  env.script /usr/local/bin/AdafruitDHT.py
  env.templog /tmp/dht_temp_log
  env.sensor 2302
  env.gpio 4
  env.tempcorrection 0
  env.humiditycorrection 0
  env.retry 2

=head1 AUTHOR

BuCCi

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf

=cut

LANG=C

function get_dht_data() {
    # Set Variables.
    STAT=1
    RCNT=1
    MAX_RETRY=${retry:-2}
    
    # It is adjusted to return 0 in the case of an error after a certain number of retries.
    while [ $STAT -ne 0 ]
    do
        DHT=`$SCRIPT $SENSOR $GPIO`
        STAT=$?
        if [ $RCNT -eq $MAX_RETRY ]; then
            A=`echo "-1 * $TempCorrection" | bc`
            B=`echo "-1 * $HumidityCorrection" | bc`
            DHT="Temp=$A*  Humidity=$B%"
            STAT=0
        fi
        RCNT=$((++RCNT))
    done

    # Parse
    Temperature=`echo $DHT | sed -e 's/Temp\=\(.*\)\*.*$/\1/;'`
    Humidity=`echo $DHT | sed -e 's/^.*Humidity\=\(.*\)\%.*$/\1/;'`
}


if [ "$1" = "autoconf" ]; then
    echo yes
    exit 0
fi

# set script file
SCRIPT=${script:-/usr/local/bin/AdafruitDHT.py}

# set log file
TEMPLOG=${templog:-/tmp/dht_temp_log}

# set device info.
SENSOR=${sensor:-2302}
GPIO=${gpio:-4}

# Value Correction.
TempCorrection=${tempcorrection:-0}
HumidityCorrection=${humiditycorrection:-0}

# Configuration.
if [ "$1" = "config" ]; then
    echo 'graph_title Room Temperature/Humidity'
    # echo 'graph_args --base 1000'
    # echo 'graph_args --base 1000 --upper-limit 50 --lower-limit 0'
    echo 'graph_category Room'
    echo 'temp.label Temperature (C)'
    echo 'temp.type GAUGE'
    echo 'temp.min -40'
    echo 'temp.max 80'
    echo 'temp.draw LINE2'
    echo 'humidity.label Humidity (%)'
    echo 'humidity.type GAUGE'
    echo 'humidity.min 0'
    echo 'humidity.max 100'
    echo 'humidity.draw LINE2'
    exit 0
fi

# Get Temp and Humidity.
get_dht_data

# Temperature underspike Correction
# If the temperature is 10 degrees lower than the previously acquired temperature, acquire it again.
if [ -f $TEMPLOG ]; then
    Lasttemp=`cat $TEMPLOG`
    echo $Lasttemp
    
    if [ `echo "$Temperature <= $Lasttemp - 10" | bc` -eq 1 ]; then
        get_dht_data
    fi
fi

# Value set & Correction
CorrectedTemp=`echo "$Temperature + $TempCorrection" | bc`
CorrectedHumd=`echo "$Humidity + $HumidityCorrection" | bc`
echo temp.value $CorrectedTemp
echo humidity.value $CorrectedHumd

echo $Temperature > $TEMPLOG

unset get_dht_data

exit 0
